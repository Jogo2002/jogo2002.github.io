---
title: "Project 3: Are Gold and Silver Equally Volatile?"
author: "Josh Goldhaber"
format:
  html:
    code-fold: true
    theme: flatly
---

## Introduction

In this project, I investigate whether gold and silver exhibit the same level of day-to-day price volatility.  
Gold and silver are both precious metals often used as investment hedges against inflation and market risk, but their price behaviors differ: gold functions more as a monetary store of value, while silver also has heavy industrial demand.

Using daily price data from **Yahoo Finance** (tickers `GC=F` for gold and `SI=F` for silver), I compute daily log returns and perform a **permutation test** under the null hypothesis that the two metals have equal volatility (standard deviation of daily returns).  

Because financial returns are often non-normal, a permutation test is a robust, simulation-based way to test this difference without assuming normality.

---

## Load packages and import data
```{r message=FALSE, warning=FALSE}
library(quantmod)
library(tidyverse)
library(infer)
library(purrr)

# Download daily gold and silver futures prices
getSymbols("GC=F", src = "yahoo", from = "2020-01-01", to = Sys.Date())
getSymbols("SI=F", src = "yahoo", from = "2020-01-01", to = Sys.Date())

# Compute log returns (first!)
gold_ret <- dailyReturn(Cl(`GC=F`), type = "log")
silver_ret <- dailyReturn(Cl(`SI=F`), type = "log")

# Create a tibble with matching dates
returns <- tibble(
  date = index(gold_ret),
  Gold = as.numeric(gold_ret),
  Silver = as.numeric(silver_ret)
) |> drop_na()

# Pivot to long format
returns_long <- returns |>
  pivot_longer(cols = c(Gold, Silver),
               names_to = "Metal",
               values_to = "Return")

```


```{r}
ggplot(returns_long, aes(x = date, y = Return, color = Metal)) +
geom_line(alpha = 0.6) +
labs(
title = "Daily Log Returns for Gold and Silver (2020–Present)",
x = "Date", y = "Daily Log Return",
color = "Metal"
) +
theme_minimal()

```

```{r}
simulate_diff_sd <- function(df) {
df |>
mutate(Metal = sample(Metal)) |>
group_by(Metal) |>
summarise(sd = sd(Return)) |>
summarise(diff_sd = diff(sd)) |>
pull(diff_sd)
}

```

```{r}
obs_diff <- returns_long |>
group_by(Metal) |>
summarise(sd = sd(Return)) |>
summarise(diff_sd = diff(sd)) |>
pull(diff_sd)

obs_diff

```


```{r}
set.seed(123)

# Simulate 1000 permutations

sim_diffs <- map_dbl(1:1000, ~simulate_diff_sd(returns_long))

# Store in a tibble for plotting

sim_df <- tibble(diff_sd = sim_diffs)

```

#Visualize permutation distribution
```{r}
ggplot(sim_df, aes(x = diff_sd)) +
geom_histogram(bins = 30, fill = "skyblue", color = "white") +
geom_vline(xintercept = obs_diff, color = "red", linetype = "dashed", size = 1) +
labs(
title = "Permutation Distribution of Difference in Volatility (Silver − Gold)",
x = "Difference in SD under Null (permuted)",
y = "Count"
) +
theme_minimal()

```

#calculating p value 
```{r}
p_val <- mean(sim_diffs >= obs_diff)
cat("Observed difference in SD:", round(obs_diff, 5), "\n")
cat("Approximate permutation p-value:", round(p_val, 4), "\n")

```

